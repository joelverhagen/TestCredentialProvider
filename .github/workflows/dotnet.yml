on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      id-token: write

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Publish
      run: dotnet publish --output ~/.nuget/plugins/netcore/TestCredentialProvider

    - uses: joelverhagen/oidc-login@v0.1.0
      id: iodc-login

    - name: Token fun
      shell: pwsh
      run: |
        $info = $env:NUGET_TOKEN_INFO | ConvertFrom-Json
        $url = "$($info.tokenUrl)&audience=$([Uri]::EscapeDataString($info.audience))"
        $headers = @{
          Authorization = "Bearer $($info.runtimeToken)";
          Accept = "application/json; api-version=2.0"
        }
        $resp = Invoke-WebRequest $url -Headers $headers
        $resp.Content | Out-File "resp.json" -Encoding utf8
      env:
        NUGET_TOKEN_INFO: ${{ steps.iodc-login.outputs.token-info }}

    - uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: resp.json

    - name: Try restore
      run: dotnet restore -s https://devdiv.pkgs.visualstudio.com/DevDiv/_packaging/nuget-server-upstreams/nuget/v3/index.json  --verbosity detailed
      env:
        NUGET_TOKEN_INFO: ${{ steps.iodc-login.outputs.token-info }}
      if: always()

    - name: Try delete
      run: dotnet nuget delete Knapcode.TorSharp 2.15.0 -s https://api.nuget.org/v3/index.json --non-interactive --verbosity detailed
      env:
        NUGET_TOKEN_INFO: ${{ steps.iodc-login.outputs.token-info }}
      if: always()

    - name: Try delete 2
      run: dotnet nuget delete Knapcode.TorSharp 2.15.0 -s https://api.nuget.org/v3/index.json -k "FAKE" --non-interactive --verbosity detailed
      env:
        NUGET_TOKEN_INFO: ${{ steps.iodc-login.outputs.token-info }}
      if: always()

    - run: ls -la
      if: always()

    - uses: actions/upload-artifact@v3
      with:
        name: my-log
        path: TestCredentialProvider.log.txt
      if: always()
